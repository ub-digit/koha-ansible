---
- hosts: all
  vars_files:
    - vars/defaults.yml
    - vars/vault.yml
  become: true
  become_user: root
  tasks:
    - name: Checkout Koha repo
      ansible.builtin.git:
        repo: "{{ koha_repo_url }}"
        dest: "{{ koha_repo_path }}"
        version: "{{ koha_repo_version }}"
        force: yes

    - name: Disable Net::Z3950::ZOOM from cpan. Installed via packages.
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .Net::Z3950::ZOOM., .1.16.;\s*)$'
        replace: "# \\1"

    - name: Limit version of Search::Elasticsearch
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .Search::Elasticsearch., .)[\d\.]+(.;\s*)$'
        replace: "\\1<= 6.80\\2"
      when: true

    - name: Limit version of Mojolicious
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .Mojolicious., .)[\d\.]+(.;\s*)$'
        replace: "# \\1<= 8.73\\2"
      when: false

    - name: Limit version of Mojolicious::Plugin::OpenAPI
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .Mojolicious::Plugin::OpenAPI., .)[\d\.]+(.;\s*)$'
        replace: "# \\1<= 3.39\\2"
      when: false

    - name: Limit version of Text::Bidi
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .Text::Bidi., .)[\d\.]+(.;\s*)$'
        replace: "# \\1<= 2.15\\2"
      when: false

    - name: Limit version of JSON::Validator
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .JSON::Validator., .)[\d\.]+(.;\s*)$'
        replace: "# \\1<= 4.05\\2"
      when: false

    - name: Limit version of DBD::mysql
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .DBD::mysql., .)[\d\.]+(.;\s*)$'
        replace: "\\1< 5.000\\2"

    - name: Limit version of UUID
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: '^(requires .UUID., .)[\d\.]+(.;\s*)$'
        replace: "\\1< 0.29\\2"

    - name: Set some recommended modules as required
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: "^recommends '{{ item }}'"
        replace: "requires '{{ item }}'"
      loop:
        - UNIVERSAL::require # SIP dependency
        - Module::Bundled::Files # Plugins dependency
        - Module::Pluggable
        - Module::Load::Conditional
        - SMS::Send # ??
        # - Test::MockObject #TODO: Devbox only?

    - name: Set some recommended modules as required
      ansible.builtin.replace:
        path: "{{ koha_repo_path }}/cpanfile"
        regexp: "^recommends '{{ item }}'"
        replace: "requires '{{ item }}'"
      loop:
        - Test::MockObject
      when: environment_name == 'devbox'

    # TODO: replace shell with command?
    - name: Install troublesome Perl modules (with failing tests)
      community.general.cpanm:
        name: "{{ item }}"
        notest: True
      loop:
        - Mojolicious::Plugin::OpenAPI
        - JSON::Validator
        - JSON::Validator::OpenAPI::Mojolicious
        - Cache::Memcached::Fast::Safe
        - DBD::mysql
      when: false

    - name: Install dependecies not included in cpanfile
      community.general.cpanm:
        name: "{{ item }}"
      loop:
        - Alien::Tidyp
        - Switch # koha-plugin-format-facet dependency
        - LWP::Simple::Post # koha-plugin-get-print-data dependency
        - DBD::Pg # GUB postgres reports
        - Crypt::OpenSSL::RSA

  # - name: Install Koha perl dependencies
  #    ansible.builtin.shell: "cd {{ koha_home }} && cpanm --installdeps ."
    - name: Install Koha perl dependencies
      community.general.cpanm:
        from_path: "{{ koha_repo_path }}"
        installdeps: yes

    - name: Install required QA packages
      apt:
        name: ['libfile-chdir-perl',
               'libgit-repository-perl',
               'liblist-compare-perl',
               'libmoo-perl',
               'libperl-critic-perl',
               'libsmart-comments-perl',
               'dh-make-perl',
               'libtest-perl-critic-progressive-perl'
               ]
        state: latest
        force: no
        update_cache: yes
      when: environment_name == 'devbox'

    - name: Checkout QA repo
      ansible.builtin.git:
        repo: "{{ qa_repo }}"
        dest: "{{ qa_home }}"
        force: yes
      when: environment_name == 'devbox'

    - name: Create run-script for qa
      ansible.builtin.template:
        src: run-qa.j2
        dest: /usr/local/bin/run-qa
        mode: 0755
      when: environment_name == 'devbox'
      become: true
