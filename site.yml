---
- hosts: all
  vars:
    pip_install_packages:
      - name: docker
      - name: docker-compose
  vars_files:
    - vars/defaults.yml
    - vars/vault.yml
  roles:
    - geerlingguy.pip
    - geerlingguy.docker
  become: true
  become_user: root
  tasks:

    - name: Install gnupg
      apt:
        name: gnupg
        state: present
        update_cache: yes

    - name: Add official Koha repository (key)
      ansible.builtin.apt_key:
        url: http://debian.koha-community.org/koha/gpg.asc
        state: present

    - name: Add official Koha repository (repo)
      ansible.builtin.apt_repository:
        repo: deb [trusted=yes] http://debian.koha-community.org/koha dev main
        update_cache: yes
        state: present

    - name: Install required packages
      apt:
        name: ['curl',
               'ntp',
               'vim',
               'byobu',
               'htop',
               'tree',
               'libstring-similarity-perl', #??
               'mariadb-server',
               'apt-transport-https',
               'cpanminus',
               'dh-make-perl',
               'git',
               'git-email',
               'libdata-printer-perl',
               'mlocate',
               'perltidy',
               'libstrictures-perl',
               # Koha-common dependencies as listed by `apt-cache depends koha-common`
               'debconf',
               'libalgorithm-checkdigits-perl',
               'libanyevent-http-perl',
               'libanyevent-perl',
               'libarchive-extract-perl',
               'libarchive-zip-perl',
               'libarray-utils-perl',
               'libauthen-cas-client-perl',
               'libbiblio-endnotestyle-perl',
               'libbusiness-isbn-perl',
               'libbusiness-issn-perl',
               'libbytes-random-secure-perl',
               'python3-apt', # Warning in ansible-role-pip
               'python-mysqldb', # required for ansible mysql collection
               #'libcache-memcached-fast-safe-perl',
#               'libcache-memcached-perl',
#               'libcgi-compile-perl',
#               'libcgi-emulate-psgi-perl',
#               'libcgi-pm-perl',
#               'libcgi-session-driver-memcached-perl',
#               'libcgi-session-perl',
#               'libcgi-session-serialize-yaml-perl',
#               'libclass-accessor-perl',
#               'libclass-factory-util-perl',
#               'libclass-inspector-perl',
#               'libclone-perl',
#               'libcrypt-eksblowfish-perl',
#               'libdata-ical-perl',
#               'libdate-calc-perl',
#               'libdate-manip-perl',
#               'libdatetime-event-ical-perl',
#               'libdatetime-format-ical-perl',
#               'libdatetime-format-mysql-perl',
#               'libdatetime-perl',
#               'libdatetime-timezone-perl',
#               'libdbd-mock-perl',
#               'libdbd-mysql-perl',
#               'libdbd-sqlite2-perl',
#               'libdbi-perl',
#               'libdbix-class-schema-loader-perl',
#               'libdbix-runsql-perl',
#               'libdevel-cover-perl',
#               'libdigest-sha-perl',
#               'libemail-date-perl',
#               'libemail-messageid-perl',
#               'libemail-sender-perl',
#               'libemail-stuffer-perl',
#               'libemail-valid-perl',
#               'libexception-class-perl',
#               'libfile-slurp-perl',
#               'libfont-ttf-perl',
#               'libgd-barcode-perl',
#               'libgd-perl',
#               'libgraphics-magick-perl',
#               'libgravatar-url-perl',
#               'libhtml-format-perl',
#               'libhtml-parser-perl',
#               'libhtml-scrubber-perl',
#               'libhttp-cookies-perl',
#               'libhttp-message-perl',
#               'libhttp-oai-perl',
#               'libintl-perl',
#               'libjson-perl',
#               'libjson-validator-perl',
#               'liblibrary-callnumber-lc-perl',
#               'liblingua-ispell-perl',
#               'liblingua-stem-perl',
#               'liblingua-stem-snowball-perl',
#               'liblist-moreutils-perl',
#               'liblocale-codes-perl',
#               'liblocale-currency-format-perl',
#               'liblocale-po-perl',
#               'liblog-log4perl-perl',
#               'libwww-perl',
#               'libio-socket-ssl-perl',
#               'libmarc-charset-perl',
#               'libmarc-file-mij-perl',
#               'libmarc-record-perl',
#               'libmarc-xml-perl',
#               'libmime-lite-perl',
#               'libmodern-perl-perl',
#               'libmodule-bundled-files-perl',
#               'libmodule-cpanfile-perl',
#               'libmodule-load-conditional-perl',
#               'libmodule-pluggable-perl',
#               'libmojolicious-perl',
#               'libmojolicious-plugin-openapi-perl',
#               'libmoo-perl',
#               'libnet-cidr-perl',
#               'libnet-ldap-perl',
#               'libnet-netmask-perl',
#               'libnet-oauth2-authorizationserver-perl',
#               'libnet-server-perl',
#               'libnet-sftp-foreign-perl',
#               'libnet-stomp-perl',
#               'libnet-z3950-simpleserver-perl',
#               'libnet-z3950-zoom-perl',
#               'libnumber-format-perl',
#               'libopenoffice-oodoc-perl',
#               'libparallel-forkmanager-perl',
#               'libpdf-api2-perl',
#               'libpdf-fromhtml-perl',
#               'libpdf-reuse-barcode-perl',
#               'libpdf-reuse-perl',
#               'libpdf-table-perl',
#               'libplack-middleware-logwarn-perl',
#               'libplack-middleware-reverseproxy-perl',
#               'libreadonly-perl',
#               'libscalar-list-utils-perl',
#               'libschedule-at-perl',
#               'libsearch-elasticsearch-perl',
#               'libsereal-decoder-perl',
#               'libsereal-encoder-perl',
#               'libsms-send-perl',
#               'libstring-random-perl',
#               'libsys-cpu-perl',
#               'libtemplate-perl',
#               'libtemplate-plugin-gettext-perl',
#               'libtemplate-plugin-htmltotext-perl',
#               'libtemplate-plugin-json-escape-perl',
#               'libtemplate-plugin-stash-perl',
#               'libtest-deep-perl',
#               'libtest-exception-perl',
#               'libtest-mockmodule-perl',
#               'libtest-mockobject-perl',
#               'libtest-mocktime-perl',
#               'libtest-simple-perl',
#               'libtest-strict-perl',
#               'libtest-warn-perl',
#               'libtest-www-mechanize-perl',
#               'libtest-yaml-valid-perl',
#               'libtext-bidi-perl',
#               'libtext-csv-encoded-perl',
#               'libtext-csv-perl',
#               'libtext-csv-xs-perl',
#               'libtext-iconv-perl',
#               'libtext-pdf-perl',
#               'libtext-unidecode-perl',
#               'libtime-fake-perl',
#               'libtry-tiny-perl',
#               'libuniversal-can-perl',
#               'libuniversal-require-perl',
#               'liburi-perl',
#               'libuuid-perl',
#               'libwebservice-ils-perl',
#               'libwww-csrf-perl',
#               'libwww-perl',
#               'libxml-dumper-perl',
#               'libxml-libxml-perl',
#               'libxml-libxslt-perl',
#               'libxml-rss-perl',
#               'libxml-sax-perl',
#               'libxml-sax-writer-perl',
#               'libxml-simple-perl',
#               'libxml-writer-perl',
#               'libyaml-perl',
#               'libyaml-syck-perl',
               'gettext',
               'xsltproc',
               'docbook-xsl',
               'ttf-dejavu',
               'libxml2-utils',
               'bash-completion',
               'libtest-simple-perl',
               'apache2',
               'libapache2-mpm-itk',
               'at',
               'daemon',
               'debconf',
               'memcached',
               'perl-doc',
               'pwgen',
               'rabbitmq-server',
               'starman',
               'sudo',
               'unzip',
               'xmlstarlet',
               'yaz',
               'libyaz-dev',
               'pkg-config',
               'uuid-dev',
               'libgdome2-dev', #For XML::LibXSLT, might be dependecy of libgdome2 that makes it compile?
               'libfribidi-dev',
               'libgd-dev'
               ]
        state: latest
        force: yes
        update_cache: yes

    # TODO: replace shell with command?
    - name: Install troublesome Perl modules (with failing tests)
      community.general.cpanm:
        name: "{{ item }}"
        notest: True
      loop:
        - Mojolicious::Plugin::OpenAPI
        - JSON::Validator
        - JSON::Validator::OpenAPI::Mojolicious
        - Cache::Memcached::Fast::Safe

    - name: Install dependecies not included in cpanfile
      community.general.cpanm:
        name: "{{ item }}"
      loop:
        - Alien::Tidyp
        - Switch # koha-plugin-format-facet dependency
        - LWP::Simple::Post # koha-plugin-get-print-data dependency

  # - name: Install Koha perl dependencies
  #    ansible.builtin.shell: "cd {{ koha_home }} && cpanm --installdeps ."
    - name: Install Koha perl dependencies
      community.general.cpanm:
        from_path: "{{ koha_home }}"
        installdeps: yes

    - name: Add Java key
      ansible.builtin.apt_key:
        keyserver: keyserver.ubuntu.com
        id: 73C3DB2A

    - name: Add Java repository
      ansible.builtin.apt_repository:
       #repo: ppa:linuxuprising/java
       repo: deb http://ppa.launchpad.net/linuxuprising/java/ubuntu bionic main
       update_cache: yes
       state: present

    - name: Set Java licence as accepted
      debconf:
        name: oracle-java16-installer
        question: shared/accepted-oracle-license-v1-2
        value: 'true'
        vtype: 'select'

    - name: Install Java
      apt:
        name: oracle-java16-installer
        state: latest
        update_cache: yes

    - name: Set Java version as default
      apt:
        name: oracle-java16-set-default
        state: latest

    - name: Add Elasticsearch key
      ansible.builtin.apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present

    - name: Add Elasticsearch repository
      ansible.builtin.apt_repository:
        repo: deb https://artifacts.elastic.co/packages/6.x/apt stable main
        state: present
        filename: elastic-6.x.list

    - name: Install Elasticsearch
      apt:
        name: elasticsearch
        state: latest
        update_cache: yes

    - name: Write Elasticsearch config
      ansible.builtin.template:
        src: elasticsearch.yml.j2
        dest: /etc/elasticsearch/elasticsearch.yml

    - name: Install Elasticsearch plugins
      community.general.elasticsearch_plugin:
        name: analysis-icu
        state: present

    # This needs to be done before trying to enable the cgi module
    - name: Apache | MPM fix
      apache2_module:
        name: mpm_event
        state: absent

    - name: Apache | Disable default vhost
      ansible.builtin.shell: a2dissite 000-default
      notify: restart apache

    - name: Apache | Set ports
      template:
        src: ports.conf.j2
        dest: /etc/apache2/ports.conf
        mode: 0644
      notify: restart apache

    - name: Apache | Enable needed modules
      apache2_module:
        name: "{{ item }}"
        state: present
      loop:
        - rewrite
        - headers
        - proxy_http
        - cgi
        - ssl
      notify: restart apache

    - name: Copy Koha scripts
      ansible.builtin.copy:
        src: "{{ koha_home }}/debian/scripts/"
        dest: "/usr/sbin/"
        remote_src: yes
        mode: preserve # Should be fixed here https://github.com/Shrews/ansible/commit/3c1ca809614863aaa6b85d460be9846494cdb802 but still does not retain permissions, so fixing this manually below

    - name: Find all Koha scripts
      find:
        paths: "/usr/sbin/"
        patterns: "koha-*"
      register: scripts

    - name: Ensure Koha scripts are executable
      ansible.builtin.file:
        path: "{{ item.path }}"
        mode: 0755
      loop: "{{ scripts.files }}"

#    - name: Replace koha-functions.sh path in scripts
#      replace:
#        path: "{{ item.path }}"
#        regexp: '/usr/share/koha/bin/koha-functions.sh'
#        replace: '{{ koha_home }}/debian/scripts/koha-functions.sh'
#      with_items: "{{ scripts.files }}"
#
    - name: Fix koha-functions.sh path in scripts
      ansible.builtin.shell: ls /usr/sbin | grep '^koha-' | xargs -I{ sed -i 's#/usr/share/koha/bin/koha-functions.sh#{{ koha_home }}/debian/scripts/koha-functions.sh#g' '/usr/sbin/{'

    - name: Comment out check_apache_config (to avoid warning causing crash)
      ansible.builtin.replace:
        path: '/usr/sbin/koha-create'
        regexp: 'check_apache_config\s*$'
        replace: '#check_apache_config'

    - name: Comment out create Zebra config files
      ansible.builtin.replace:
        path: '/usr/sbin/koha-create'
        regexp: '((?:generate_config_file zebra)|(?:"/etc/koha/sites/\$name/zebra))'
        replace: '#\1'

    - name: Comment out start-zebra
      ansible.builtin.replace:
        path: '/usr/sbin/koha-create'
        regexp: 'koha-zebra --start'
        replace: '#koha-zebra --start'

    # Special care will have to be taken with these files on new Koha realse
    # deployments.  Will have to manually compare with new release templates
    # and manually merge
    - name: Copy manually manged Koha config template files
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/etc/{{ item }}"
        dest: "/etc/koha/"
      # worker-service???
      loop:
        - koha-conf-site.xml.in
        - koha-common.conf
        - koha-sites.conf
        - koha-core.conf
        - apache-site.conf.in

    # Note: we do not use apache-site.conf.in since have modified
    # apache-site.conf.in instead (to don't have to deal with koha-create
    # trying to perform letsencrypt magick etc if run with ssl option)
    - name: Copy rest of unmanaged Koha config template files from release
      ansible.builtin.copy:
        remote_src: yes
        src: "{{ koha_home }}/debian/templates/{{ item }}"
        dest: "/etc/koha/"
      loop:
        - log4perl-site.conf.in
        - SIPconfig.xml
        - plack.psgi
        - apache-shared.conf
        - apache-shared-disable.conf
        - apache-shared-intranet.conf
        - apache-shared-intranet-plack.conf
        - apache-shared-opac.conf
        - apache-shared-opac-plack.conf
        - apache-site-https.conf.in

    - name: Write custom apache config
      ansible.builtin.template:
        src: apache-shared-custom.conf.j2
        dest: /etc/koha/apache-shared-custom.conf

    - name: Ensure /etc/koha/passwd
      template:
        src: koha_passwd.j2
        dest: /etc/koha/passwd
        mode: 0644

    - name: Ensure /etc/default/koha-common
      template:
        src: koha-common.j2
        dest: /etc/default/koha-common
        mode: 0644

    - name: Ensure Koha init script
      ansible.builtin.copy:
        remote_src: yes
        src: "{{ koha_home }}/debian/koha-common.init"
        dest: "/etc/init.d/koha-common"
        mode: 0755

    - name: Replace koha-functions.sh path in Koha init script
      ansible.builtin.replace:
        path: "/etc/init.d/koha-common"
        regexp: '/usr/share/koha/bin/koha-functions.sh'
        replace: "{{ koha_home }}/debian/scripts/koha-functions.sh"

    - name: Comment out package check in Koha init script
      ansible.builtin.replace:
        path: "/etc/init.d/koha-common"
        regexp: '(\[ -x /usr/sbin/koha-zebra)'
        replace: '# \1'

    - name: Comment out koha-zebra in Koha init script
      ansible.builtin.replace:
        path: "/etc/init.d/koha-common"
        regexp: '(\skoha-zebra\s)'
        replace: '#\1'

    - name: Comment out zebra_status in Koha init script
      ansible.builtin.replace:
        path: "/etc/init.d/koha-common"
        regexp: '(\szebra_status\s)'
        replace: '#\1'

    - name: Enable Koha init script
      ansible.builtin.command: update-rc.d koha-common defaults

    # Can't figure out where these are created, at least not in koha-common package, koha-create (or koha-create-dirs)
    # koha-common.dirs
    - name: Create /etc/koha/sites directory
      ansible.builtin.file:
        path: /etc/koha/sites
        mode: 0755
        state: directory

    - name: Create /var/log/koha directory
      ansible.builtin.file:
        path: /var/log/koha
        mode: 0755
        state: directory

    - name: Ensure koha_home directory
      ansible.builtin.file:
        path: "{{ koha_home }}"
        mode: 0755
        state: directory

    - name: Create symlink debian.cnf -> koha-common.cnf
      ansible.builtin.file:
        src: /etc/mysql/debian.cnf
        dest: /etc/mysql/koha-common.cnf
        state: link

    - name: Check if mariadb data directory exist
      stat:
        path: "{{ mariadb_data_dir }}"
      register: mariadb_data

    - name: Ensure mysql data directory exists and contain system tables
      ansible.builtin.shell: "cp -a /var/lib/mysql {{ mariadb_data_dir }}"
      when: mariadb_data.isdir is not defined
      notify: restart mysql

    - name: Write mariadb config
      ansible.builtin.template:
        src: mariadb-50-server.cnf.j2
        dest: /etc/mysql/mariadb.conf.d/50-server.cnf
      notify: restart mysql

    - name: Check if mariadb data directory exist
      stat:
        path: "{{ mariadb_data_dir }}"
      register: mariadb_data
# TODO: Replace dir
#   - name: Write koha-sites.conf file
#     template:
#       src: koha-sites.conf.j2
#       dest: /etc/koha/koha-sites.conf
#       mode: 0644

#   - name: Write koha-conf-site.xml file
#     template:
#       src: koha-conf-site.xml.in.j2
#       dest: /etc/koha/koha-conf-site.xml.in
#       mode: 0644
#
    - name: Ensure Elasticsearch data directory
      ansible.builtin.file:
        path: "{{ elasticsearch_data_dir }}"
        owner: elasticsearch
        group: elasticsearch
        # NOTE: 2 = setguid flag. The prefix 0 is required by Ansible
        mode: 02750
        state: directory

    - name: Check for instance existence
      ansible.builtin.shell: koha-list | grep {{ koha_instance_name }}
      register: result
      ignore_errors: yes

    - name: Create Koha instance
      ansible.builtin.command: koha-create --create-db {{ koha_instance_name }}
      when: result.stdout == ""
      notify: restart apache

#    - name: Update ummanaged included Apache config files
#      ansible.builtin.copy:
#        remote_src: yes
#        src: "{{ koha_home }}/debian/templates/{{ item }}"
#        dest: "/etc/koha/"
#      loop:
#        - apache-shared.conf
#        - apache-shared-disable.conf
#        - apache-shared-intranet.conf
#        - apache-shared-intranet-plack.conf
#        - apache-shared-opac.conf
#        - apache-shared-opac-plack.conf
#        - apache-site.conf.in
#        - apache-site-https.conf.in
#
    - name: Replace DocumentRoot path in apache-shared-intranet.conf and apache-shared-opac.conf
      ansible.builtin.replace:
        path: "/etc/koha/{{ item }}"
        regexp: '^DocumentRoot [^ ]+\s*$'
        replace: "DocumentRoot {{ koha_home }}/koha-tmpl"
      loop:
        - apache-shared-intranet.conf
        - apache-shared-opac.conf

    - name: Replace ScriptAlias path in apache-shared-intranet.conf and apache-shared-opac.conf
      ansible.builtin.replace:
        path: "/etc/koha/{{ item }}"
        regexp: '^(ScriptAlias [^ ]+) "[^"]+/cgi-bin/([^"]*)"'
        replace: "\\1 \"{{ koha_home }}/\\2\""
      loop:
        - apache-shared-intranet.conf
        - apache-shared-opac.conf

    - name: Replace API paths in apache-shared-intranet.conf and apache-shared-opac.conf
      ansible.builtin.replace:
        path: "/etc/koha/{{ item }}"
        regexp: '/usr/share/koha/api'
        replace: "{{ koha_home}}/api"
      loop:
        - apache-shared-intranet.conf
        - apache-shared-opac.conf

    - name: Replace PERL5LIB path in apache-shared.conf
      ansible.builtin.replace:
        path: "/etc/koha/apache-shared.conf"
        regexp: '^SetEnv PERL5LIB "[^"]+"\s*$'
        replace: "SetEnv PERL5LIB \"{{ koha_home }}\""

    # TODO: enable SIP!
    - name: Update unmanaged Koha instance config files from current release
      ansible.builtin.copy:
        remote_src: yes
        src: "{{ koha_home }}/debian/templates/{{ item.0 }}"
        dest: "/etc/koha/sites/{{ koha_instance_name}}/{{ item.1 }}"
      loop: "{{ ['SIPconfig.xml', 'log4perl-site.conf.in']|zip(['SIPconfig.xml', 'log4perl.conf'])|list }}"

    - name: Replace __LOG_DIR__ in log4perl.conf
      ansible.builtin.replace:
        dest: "/etc/koha/sites/{{ koha_instance_name}}/log4perl.conf"
        regexp: '__LOG_DIR__'
        replace: "/var/log/koha/{{ koha_instance_name }}"

    - name: Copy Apache certificate
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/secret/koha.pem"
        dest: /etc/ssl/certs/koha.pem
        group: "{{ koha_instance_name }}-koha" #??

    - name: Copy Apache certificate private key
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/secret/koha.key"
        dest: /etc/ssl/private/koha.key
        owner: root
        group: root

    - name: Add ansible user to koha instance group
      ansible.builtin.user:
        name: "{{ ansible_user }}"
        append: yes
        groups: "{{ koha_instance_name }}-koha"

    - name: Set dev_install in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        regexp: '<dev_install>0</dev_install>'
        replace: '<dev_install>1</dev_install>'
      notify: restart memcached
      #when: result.stdout == ""

    - name: Set enable_plugins in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        regexp: '<enable_plugins>0</enable_plugins>'
        replace: '<enable_plugins>1</enable_plugins>'
      notify: restart memcached

    - name: Set intranetdir in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        regexp: '<intranetdir>[^<]+</intranetdir>'
        replace: "<intranetdir>{{ koha_home }}</intranetdir>"
      notify: restart memcached
      #when: result.stdout == ""

    - name: Set intrahtdocs in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        regexp: '<intrahtdocs>[^<]+</intrahtdocs>'
        replace: "<intrahtdocs>{{ koha_home }}/koha-tmpl/intranet-tmpl</intrahtdocs>"
      notify: restart memcached
      #when: result.stdout == ""

    - name: Set opacdir in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        regexp: '<opacdir>[^<]+</opacdir>'
        replace: "<opacdir>{{ koha_home }}/opac</opacdir>"
      notify: restart memcached
      #when: result.stdout == ""

    - name: Set opachtdocs in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        regexp: '<opachtdocs>[^<]+</opachtdocs>'
        replace: "<opachtdocs>{{ koha_home }}/koha-tmpl/opac-tmpl</opachtdocs>"
      notify: restart memcached
      #when: result.stdout == ""

    - name: Set included in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        regexp: '<includes>[^<]+</includes>'
        replace: "<includes>{{ koha_home }}/koha-tmpl/intranet-tmpl/prog/en/includes</includes>"
      notify: restart memcached
      #when: result.stdout == ""

    # TODO: Create loop for this to avoid duplication, possible?
    # TODO: restart plack/memcached?
    - name: Set smtp_server/host in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        after: '<smtp_server>'
        before: '</smtp_server>'
        regexp: '<host>[^<]*</host>'
        replace: "<host>{{ smtp_host }}</host>"

    - name: Set smtp_server/port  in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        after: '<smtp_server>'
        before: '</smtp_server>'
        regexp: '<port>[^<]*</port>'
        replace: "<port>{{ smtp_port }}</port>"

    - name: Set smtp_server/ssl_mode in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        after: '<smtp_server>'
        before: '</smtp_server>'
        regexp: '<ssl_mode>[^<]*</ssl_mode>'
        replace: "<ssl_mode>{{ smtp_ssl_mode }}</ssl_mode>"

    - name: Set smtp_server/user_name  in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        after: '<smtp_server>'
        before: '</smtp_server>'
        regexp: '<user_name>[^<]*</user_name>'
        replace: "<user_name>{{ smtp_username }}</user_name>"

    - name: Set smtp_server/password  in koha-conf.xml
      ansible.builtin.replace:
        path: /etc/koha/sites/{{ koha_instance_name }}/koha-conf.xml
        after: '<smtp_server>'
        before: '</smtp_server>'
        regexp: '<password>[^<]*</password>'
        replace: "<password>{{ smtp_password }}</password>"

    # Hack
    - name: Set smtp host in system perl Sendmail.pm
      ansible.builtin.replace:
        path: /usr/share/perl5/Mail/Sendmail.pm
        after: '# \*+ Configuration you may want to change \*+'
        before: '\);\s+# \*+'
        regexp: "^(\\s+'smtp'\\s+=>\\s+).*$"
        replace: '\1[ qw( {{ smtp_host }} ) ],'

    - name: Set smtp port in system perl Sendmail.pm
      ansible.builtin.replace:
        path: /usr/share/perl5/Mail/Sendmail.pm
        after: '# \*+ Configuration you may want to change \*+'
        before: '\);\s+# \*+'
        #regexp: "^(\\s+'port'\\s+=>\\s+).*$"
        #replace: '\1{{ smtp_port }},'
        regexp: "^(\\s+'port'\\s+=>).*$"
        replace: '\1 {{ smtp_port }},' # Weird behavior no space between \1{{ will cause issues

    - name: Copy cronjobs (cron.d)
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/cron/koha-common.cron.d"
        dest: /etc/cron.d/koha
      when: result.stdout == ""

    - name: Copy cronjobs (cron.daily)
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/cron/koha-common.cron.daily"
        dest: /etc/cron.daily/koha
      when: result.stdout == ""

    - name: Copy cronjobs (cron.hourly)
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/cron/koha-common.cron.hourly"
        dest: /etc/cron.hourly/koha
      when: result.stdout == ""

    - name: Comment out zebraqueue job
      ansible.builtin.replace:
        path: /etc/cron.daily/koha
        regexp: '(koha-foreach.+?--zebraqueue)'
        replace: '#\1'
      when: result.stdout == ""

    - name: Adjust Koha paths for cron-scripts
      ansible.builtin.replace:
        path: "{{ item }}"
        regexp: '/usr/share/koha/bin'
        replace: '{{ koha_home }}/misc'
      loop:
        - /etc/cron.d/koha
        - /etc/cron.daily/koha
        - /etc/cron.hourly/koha
      when: result.stdout == ""

    - name: Copy database dump file
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/initial-db.sql"
        dest: /tmp/initial-db.sql
      when: result.stdout == ""

    - name: Import Koha database
      community.mysql.mysql_db:
        name: "koha_{{ koha_instance_name }}"
        state: import
        target: /tmp/initial-db.sql
      when: result.stdout == ""

    # Translation files
    - name: Copy translation files
      ansible.builtin.copy:
        dest: "{{ koha_po_files_path }}"
        src: "{{ playbook_dir }}/files/po/"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}" # group?

    # GUB-scripts
    - name: Write /usr/local/sbin/koha-database-backup.sh
      template:
        src: koha-database-backup.sh.j2
        dest: /usr/local/sbin/koha-database-backup.sh
        mode: 0544

    - name: Ensure log directory for koha-database-backup.sh
      ansible.builtin.file:
        path: "{{ koha_database_backup_log_dir }}"
        mode: 0755
        state: directory

    - name: Ensure data directory for koha-database-backup.sh
      ansible.builtin.file:
        path: "{{ koha_database_backup_data_dir }}"
        mode: 0755
        state: directory

    - name: Schedule cron job for koha-database-backup.sh
      ansible.builtin.cron:
        name: "koha-database-backup"
        minute: "00"
        hour: "23"
        job: "/usr/local/sbin/koha-database-backup.sh >> {{ koha_database_backup_log_dir }}/backup.log 2>&1"
        state: "{{ 'present' if koha_database_backup_cron_enabled else 'absent' }}"

    - name: Schedule cron job for gub_edifact.pl
      ansible.builtin.cron:
        name: koha-gub-edifact
        minute: "00"
        hour: "22"
        job: "/usr/sbin/koha-shell -c {{ koha_home }}/misc/cronjobs/gub_edifact.pl {{ koha_instance_name }} 2>&1"
        state: "{{ 'present' if gup_edifact_cron_enabled else 'absent' }}"

    # Deploy mailhog docker service
    #
    - name: Ensure mailhog docker-compose directory
      ansible.builtin.copy:
        src: "{{ playbook_dir }}/files/mailhog"
        dest: "/home/{{ ansible_user }}/"

    - name: Run mailhog service
      community.docker.docker_compose:
        project_src: "/home/{{ ansible_user }}/mailhog"
        state: present

    - name: Write log config for koha-plugin-marc-import
      ansible.builtin.template:
        src: koha-plugin-marc-import-log4perl.conf.j2
        dest: "/etc/koha/sites/{{ koha_instance_name }}/koha-plugin-marc-import-log4perl.conf"

    # Hack to install from git reposity, works but ugly as hell
    # TODO: checkout as ansible_user to be consistent?
    - name: Checkout MimeMailSender repo, required by marc import plugin
      ansible.builtin.git:
        repo: https://github.com/ub-digit/Log-Dispatch-Email-MimeMailSender.git
        dest: "/home/{{ ansible_user}}/Log-Dispatch-Email-MimeMailSender"
        version: master

    - name: Inject MIMEMailSender in perl lib path
      ansible.builtin.file:
        src: "/home/{{ ansible_user}}/Log-Dispatch-Email-MimeMailSender/lib/Log/Dispatch/Email/MIMEMailSender.pm"
        dest: "/usr/share/perl5/Log/Dispatch/Email/MIMEMailSender.pm"
        state: link

    - name: Start koha-common service
      ansible.builtin.service:
        name: koha-common
        state: started

  # TODO: Handlers for restarting plack/zipserver etc
  handlers:
    - name: restart apache
      ansible.builtin.service:
        name: apache2
        state: restarted
      become: yes
    - name: restart mysql
      ansible.builtin.service:
        name: mariadb
        state: restarted
      become: yes
    - name: restart memcached
      ansible.builtin.service:
        name: memcached
        state: restarted
      become: yes
    - name: restart plack # Untested!
      ansible.builtin.shell:
        cmd: "if [ -f /var/run/koha/{{ koha_instance_name }}/plack.pid ]; then koha-plack --restart {{ koha_instance_name }}; else koha-plack --start {{ koha_instance_name }}; fi"
      become: yes
